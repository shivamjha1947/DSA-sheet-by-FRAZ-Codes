Question: https://leetcode.com/problems/divisor-game/
Alice and Bob take turns playing a game, with Alice starting first.
Initially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of:
Choosing any x with 0 < x < n and n % x == 0.
Replacing the number n on the chalkboard with n - x.
Also, if a player cannot make a move, they lose the game.
Return true if and only if Alice wins the game, assuming both players play optimally.

------------------------------------------------------------------------------------------------------------------
Solution:
Method 1) DP
int t[1001];
int help(int n){
    if(n==1){
        return 0;
    }
    if(t[n]!=-1){
        return t[n];
    }
    for(int i=1;i*i<n;i++){
        if(n%i==0){
            if(help(n-i)==0){
                return t[n]=1;
            }
            if(i!=1 && help(n-(n/i))==0){
                return t[n]=1;
            }
        }   
    }
    return t[n]=0;

}
bool divisorGame(int n) {
    memset(t,-1,sizeof(t));
    return help(n);
}

Method 2) Trick
bool divisorGame(int n) {
   return n%2==0;
}
