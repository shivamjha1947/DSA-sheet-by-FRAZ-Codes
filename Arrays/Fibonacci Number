Question: https://leetcode.com/problems/fibonacci-number/
The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, 
such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,
F(0) = 0, F(1) = 1
F(n) = F(n - 1) + F(n - 2), for n > 1.
Given n, calculate F(n).

----------------------------------------------------------------------------------------------------
Solution:
// DP (very easy)
int fib(int n) {
    if(n==0 || n==1){
        return n;
    }
    int t[n+1];
    t[0]=0;
    t[1]=1;
    for(int i=2;i<=n;i++){
        t[i]=t[i-1]+t[i-2];
    }
    return t[n];
}

//Recursive
int fib(int n) {
    if(n==0 || n==1){
        return n;
    }
    return fib(n-1)+fib(n-2);
}
