Question: https://leetcode.com/problems/k-diff-pairs-in-an-array/
Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.
A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:
0 <= i < j < nums.length
|nums[i] - nums[j]| == k
Notice that |val| denotes the absolute value of val.

---------------------------------------------------------------------------------------
Solution:
int findPairs(vector<int>& nums, int k) {
    if (k < 0) {
        return 0;
    }
    unordered_set<int> starters;
    unordered_map<int, int> indices;
    for (int i = 0; i < nums.size(); i++) {
        if (indices.count(nums[i] - k)) {
            starters.insert(nums[i] - k);
        }
        if (indices.count(nums[i] + k)) {
            starters.insert(nums[i]);
        }

        indices[nums[i]] += 1;
    }

    return starters.size();
}
